apiVersion: v1
kind: Namespace
metadata:
  name: apache-namespace
  labels:
    istio-injection: enabled
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: apache-virtualservice
  namespace: apache-namespace
spec:
  hosts:
    - '*'
  gateways:
    - loadbalancer-external/istio-ingressgateway-external
  http:
  - match:
    - uri:
        prefix: "/apache"
    route:
    - destination:
        host: apache.apache-namespace.svc.cluster.local
        port:
          number: 80
---
# Create sticky session (comment this block if no sticky is required)
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: apache-destinationrule
  namespace: apache-namespace
spec:
  host: apache.apache-namespace.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      consistentHash:
        useSourceIp: true
---
apiVersion: v1
kind: Service
metadata:
  name: apache
  namespace: apache-namespace
  labels:
    app: apache
spec:
  selector:
    app: apache
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  namespace: apache-namespace
  labels:
    app: apache
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - name: apache
        image: httpd # <-- APACHE IMAGE
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo $MY_NODE_NAME - $HOSTNAME > htdocs/apache"]
        # LIFECYCLE DEFINITION END
        ports:
        - containerPort: 80
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 0.5
            memory: 128Mi
          requests:
            cpu: 0.1
            memory: 128Mi